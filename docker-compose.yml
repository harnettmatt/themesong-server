networks:
  themesong-network:
    name: themesong-network
    driver: bridge
services:
  cloudflare-ddns:
    env_file:
      - .env
    image: favonia/cloudflare-ddns:latest
    network_mode: host
    restart: always
    user: "1000:1000"
    read_only: true
    cap_drop: [all]
    security_opt: [no-new-privileges:true]
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DOMAINS=themesong.io
      - PROXIED=true
  nginx:
    image: nginx:latest
    container_name: themesong-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    networks:
      - themesong-network
    restart: always
    depends_on:
      - cloudflare-ddns
      - fe
      - api
      - db
  fe:
    build:
      context: ../themesong-client
      dockerfile: Dockerfile
    env_file:
      - ../themesong-client/.env
    ports:
      - '8080:8080'
    networks:
      - themesong-network
  db:
    image: postgres:14.1-alpine
    privileged: true
    restart: always
    env_file:
      - ../themesong/.env
    ports:
      - '54320:5432'
    networks:
      - themesong-network
  api:
    privileged: true
    build:
      context: ../themesong
      dockerfile: Dockerfile
    env_file:
      - ../themesong/.env
    depends_on:
      - db
    restart: on-failure:2
    environment:
      DB_HOST: db
    ports:
      - '8000:8000'
    # develop:
    #   watch:
    #     - action: sync+restart
    #       path: ./app
    #       target: /code/app
    networks:
      - themesong-network